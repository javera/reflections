When would you want to use a remote repository rather than keeping all your work local?

	Collaborating with other people on a project or working on a few different machines,
	changes made on one PC can then be synced onto different devices. On top of that, if
	the files are only stored locally, any hardware failures would result in you losing
	the files.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

	It's similar to why git by default requires you to manually commit changes to files.
	Also, if you want, you could work on the files in the repository locally, then just
	push the changes to the remote when you are online or satisfied with the modifications
	(which may end up in the public repository that other people can view). 

Describe the differences between forks, clones, and branches. When would you use one
instead of another?

	Forks are a special type of clones that are specific to GitHub. By forking a project
	hosted on GitHub you get the copy of the repository in your own GitHub account. Cloning
	is a more generic term that applies to situations where you get the full copy of a
	repository (including commit history, etc.) that is hosted locally or remotely into
	a local or remote location. Branches are terms that can be used only when speaking 
	about a single repository. A branch is just a set of all or fewer commits that have
	happened in the repository.

What is the benefit of having a copy of the last known state of the remote stored locally?

	In case you have no internet access (e.g. on a plane) you can get the copy from
	github and be able to view the changes that were for example made by other people
	and decide whether to merge the modifications (first locally), then sync them with
	the remote repository.